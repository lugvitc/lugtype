name: Monkey CI

on:
  pull_request:
    branches: [master, dev]
  push:
    branches: [master]

jobs:
  pre-ci:
    name: pre-ci
    runs-on: ubuntu-latest
    outputs:
       should-build-be: ${{ steps.export-changes.outputs.should-build-be }}
       should-build-fe: ${{ steps.export-changes.outputs.should-build-fe }}
       fixtures-any-json: ${{ steps.export-changes.outputs.any-json }}
       fixtures-language-json: ${{ steps.export-changes.outputs.language-json }}
       fixtures-quotes-json: ${{ steps.export-changes.outputs.quotes-json }}
       fixtures-other-json: ${{ steps.export-changes.outputs.other-json }}

    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            any-json:
              - 'frontend/**/*.json'
            language-json:
              - 'frontend/static/languages/*.json'
            quotes-json:
              - 'frontend/static/quotes/*.json'
            other-json:
              - 'frontend/static/funbox/*.json'
              - 'frontend/static/fonts/*.json'
              - 'frontend/static/themes/*.json'
              - 'frontend/static/challenges/*.json'
              - 'frontend/static/layouts/*.json'
            be-src:
              - 'backend/**/*.{ts,js,json,lua,css,html}'
            fe-src:
              - 'frontend/**/*.{ts,scss}'
            anti-cheat:
              - 'backend/**/anticheat/**'

      - name: Check Anti-cheat
        if: steps.filter.outputs.anti-cheat == 'true'
        run: exit 1

      - name: Export changes
        id: export-changes
        run: |
          echo "should-build-be=${{ steps.filter.outputs.be-src }}" >> $GITHUB_OUTPUT
          echo "should-build-fe=${{ steps.filter.outputs.fe-src }}" >> $GITHUB_OUTPUT
          echo "fixtures-any-json=${{ steps.filter.outputs.any-json }}" >> $GITHUB_OUTPUT
          echo "fixtures-language-json=${{ steps.filter.outputs.language-json }}" >> $GITHUB_OUTPUT
          echo "fixtures-quotes-json=${{ steps.filter.outputs.quotes-json }}" >> $GITHUB_OUTPUT
          echo "fixtures-other-json=${{ steps.filter.outputs.other-json }}" >> $GITHUB_OUTPUT


      - name: Set up Node.js
        if: steps.filter.outputs.changes != '[]'
        uses: actions/setup-node@v1
        with:
          node-version: "16.13.2"

      - name: Install global dependencies
        if: steps.filter.outputs.changes != '[]'
        run: npm ci

  ci-be:
    name: ci-be
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.should-build-be == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.13.2"

      - name: Install dependencies
        run: cd backend && npm ci

      - name: Check pretty
        run: npm run pretty-code-be

      - name: Check lint
        run: npm run lint-be

      - name: Build
        run: npm run pr-check-build-be

      - name: Test
        run: npm run test-be

  ci-fe:
    name: ci-fe
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.should-build-fe == 'true'
    steps:
      - uses: actions/checkout@v2

      - name: Create stub firebase config
        working-directory: ./frontend/src/ts/constants
        run: mv ./firebase-config-example.ts ./firebase-config-live.ts

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Check pretty
        run: npm run pretty-code-fe

      - name: Check lint
        run: npm run lint-fe
      
      - name: Build
        run: npm run pr-check-ts
  
  ci-fixtures:
    name: ci-fixtures
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.fixtures-any-json == 'true'
    steps:
    - uses: actions/checkout@v2

    - name: Lint JSON
      run: npm run pr-check-lint-json

    - name: Validate languages JSON
      if: needs.pre-ci.outputs.fixtures-language-json == 'true'
      run: npm run pr-check-language-json

    - name: Validate quotes JSON
      if: needs.pre-ci.outputs.fixtures-quotes-json == 'true'
      run: npm run pr-check-quote-json

    - name: Validate other JSON
      if: needs.pre-ci.outputs.fixtures-other-json == 'true'
      run: npm run pr-check-other-json
